#!../.venv/bin/python
import os
import sqlite3

from wikdict_query import combined_result

DICT_DIR = "/home/karl/code/github/wikdict-web/data/dict/"


def print_result(r):
    print("\n##", r["written_rep"], end="")

    if r["part_of_speech"]:
        print(f" ({r['part_of_speech']})")
    else:
        print()

    for i, sg in enumerate(r["sense_groups"]):
        print(f"### ", ", ".join(sg["translations"]))
        for sense in sg["senses"]:
            print("*", sense)


def lookup(from_lang, to_lang, query=None):
    conn1 = sqlite3.connect(DICT_DIR + f"/{from_lang}-{to_lang}.sqlite3")
    conn2 = sqlite3.connect(DICT_DIR + f"/{to_lang}-{from_lang}.sqlite3")
    results = [
            combined_result(conn1, query),
            combined_result(conn2, query),
        ]

    for lang, result in zip((from_lang, to_lang), results):
        print(f'# WikDict Search Result for "{query}" ({lang})')
        if not result:
            print('No results')

        for lexentry in result.definitions:
            print_result(lexentry)

        for idiom in result.idioms:
            print("\n##", idiom["written_rep"])
            for trans in idiom["translations"]:
                print("*", trans)


try:
    query = os.environ.get("QUERY_STRING")
    lang1, lang2 = os.environ["PATH_INFO"].strip("/").split("-")
    if len(lang1) != 2 or len(lang2) != 2:
        print("50 Language specified in invalid format")
        exit()

    if query:
        print("20 text/gemini\r")
        lookup(lang1, lang2, query)
    else:
        print(f"10 Enter a word in {lang1} or {lang2}\r")
except Exception as e:
    print(f"50 Error: {repr(e)}\n")
    raise
