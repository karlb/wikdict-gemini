#!../venv/bin/python
import os
from itertools import groupby
from collections import OrderedDict, namedtuple
import sqlite3
from typing import List

DATA_DIR = '/home/karl/code/github/wikdict-web/data'
os.environ['OPENSHIFT_DATA_DIR'] = DATA_DIR
os.environ['OPENSHIFT_LOG_DIR'] = '/tmp'
os.environ['OPENSHIFT_SECRET_TOKEN'] = 'secret123'

from wikdict_web.lookup import LexicalEntryResult, LangResultList


def lookup(from_lang, to_lang, query=None):
    if len(from_lang) != 2 or len(to_lang) != 2:
        print("50 Language specified in invalid format")
        exit()

    templ_vals = {}

    if query:
        results = sorted([
            LangResultList(from_lang, to_lang, query),
            LangResultList(to_lang, from_lang, query),
        ], key=lambda x: x.score, reverse=True)
        # if not results[0] and not results[1]:
        #     templ_vals['did_you_mean'] = spellfix(from_lang, to_lang, query)
        # else:
        templ_vals['did_you_mean'] = []

        # wiktionary_links = OrderedDict(
        #     (key, val)
        #     for key, val in (
        #         (lang, get_wiktionary_links(lang, query))
        #         for lang in (from_lang, to_lang)
        #     ) if val  # skip langs without results
        # )
        wiktionary_links = None
    else:
        results = None
        wiktionary_links = None
    return dict(
        from_lang=from_lang,
        to_lang=to_lang,
        query=query,
        results=results,
        description=results[0].description if results else None,
        page_name='lookup',
        wiktionary_links=wiktionary_links,
        **templ_vals
    )


def format_results(results: dict):
    for lang_result in results['results']:
        if not len(lang_result):
            continue

        yield f'## {lang_result.from_lang} -> {lang_result.to_lang}'
        for lexentry in lang_result:
            for result in lexentry:
                yield '### ' + result.written_rep
                if result.sense_list:
                    for sense in result.sense_list.split(' | '):
                        yield sense
                yield ' -> {}'.format(
                    ', '.join(result.trans_list.split(' | '))
                )
                yield ''
        yield ''


try:
    query = os.environ.get("QUERY_STRING")
    lang1, lang2 = os.environ["PATH_INFO"].strip('/').split('-')
    if query:
            print("20 text/gemini\r")
            print(f'# WikDict Search Result for "{query}"')
            results = lookup(lang1, lang2, query)
            for line in format_results(results):
                print(line)
    else:
            print("10 Enter a word in English or German\r")
except Exception as e:
    print('Error:', e)
    raise
